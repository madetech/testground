{
  "name": "ssh_user",
  "description": "Manage basic global or user's ssh configurations.",
  "long_description": "# Chef SSH User\n\n> Manage basic global or user's ssh configurations.\n\n## Description\n\nThis cookbook features:\n\n* Provides Chef LWRP:\n  * `ssh_user_private_key`\n  \n* Includes *ssh-util's* Chef LWRP:\n  * `ssh_util_known_hosts`\n  * `ssh_util_config`\n  \n* A companion recipe for [user::data_bag](https://github.com/fnichol/chef-user).\n\n## Usage\n\nInclude `recipe[ssh_user]` in your `run_list` and `ssh_user_private_key` resource will become available.\n\nThe `ssh_user::data_bag` recipe assumes that you're using the `user::data_bag` recipe from the excellent [user cookbook](https://github.com/fnichol/chef-user). It lets you configure ssh aspects in user specific data_bags, e.g.\n\n```\n{\n  \"id\": \"testman\",\n  ...\n  \"ssh_user\": {\n    \"config\": {\n      \"github.com\": {\n        \"User\": \"git\",\n        \"IdentityFile\": \"~/.ssh/github_rsa\"\n      }\n    },\n    \"known_hosts\": {\n      \"github.com\": {\n        \"hashed\": false\n      }\n    },\n    \"private_keys\": {\n      \"github_rsa\": \"ABCD\"\n    }\n  }\n}\n```\n\nRequirements\n------------\n\n### Platform\nThis cookbook has been tested with the following OSes:\n\n* ubuntu 12.04\n\n### Cookbooks\nThe cookbook has got the following dependencies:\n\n* [user](https://github.com/fnichol/chef-user)\n* [ssh-util](http://community.opscode.com/cookbooks/ssh-util)\n\n## Recipes\n\n### default\n\nNo-op, does nothing.\n\n### data_bag\nProcesses `node['users']` and performs the configuration for the ones whose data_bags enable it, e.g.\n\n```\n{\n  \"id\" : \"testman\",\n  ...\n  \"ssh_user\": {\n    \"config\": {\n      \"github.com\": {\n        \"User\": \"git\",\n        \"IdentityFile\": \"~/.ssh/github_rsa\"\n      }\n    },\n    \"known_hosts\": {\n      \"github.com\": {\n        \"hashed\": false\n      }\n    },\n    \"private_keys\": {\n      \"github_rsa\": \"ABCD\"\n    }\n  }\n}\n```\n\n## Resources and Providers\n\n### ssh_private_keys\n\n#### Actions\n\n<table>\n  <thead>\n    <tr>\n      <th>Action</th>\n      <th>Description</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>create</td>\n      <td>Creates the user's <code>~/user/private_key</code> file.</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <td>delete</td>\n      <td>Deletes  the user's <code>~/user/private_key</code> file.</td>\n      <td>No</td>\n    </tr>\n  </tbody>\n</table>\n\n#### Attributes\n\n<table>\n  <thead>\n    <tr>\n      <th>Attribute</th>\n      <th>Description</th>\n      <th>Default Value</th>\n      <th>Required</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>name</td>\n      <td><b>Name attribute:</b> Name of the key file.</td>\n      <td><code>nil</code></td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <td>key</td>\n      <td>A full line to add to the file.</td>\n      <td><code>nil</code></td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <td>user</td>\n      <td>An existing username.</td>\n      <td><code>nil</code></td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <td>path</td>\n      <td>A full path to a where to put the key file. If used with the `user` attribute, this will take precedence over the path to a user's home direcotry, but the file will be created (if necessary) as that user.</code></td>\n      <td><code>/etc/ssh</code></td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n\n\n#### Example\n\n```\nssh_user_private_key 'github_key' do\n  key get_my_super_secret_key\nend\n\nssh_user_private_key 'testman_server_key' do\n  key get_my_super_secret_key\n  user 'testman'\nend\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality.\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## License\nCopyright (c) 2013 franklin under the MIT license.\n",
  "maintainer": "franklin",
  "maintainer_email": "franklin@weareinteractive.com",
  "license": "MIT",
  "platforms": {
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "user": ">= 0.0.0",
    "ssh-util": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "ssh_user": "Empty recipe for including LWRPs",
    "ssh_user::data_bag": "Read data bag to include ssh configs"
  },
  "version": "0.1.1"
}